'''
Задача 16: Требуется вычислить, сколько раз встречается некоторое 
число X в массиве A. Пользователь в первой строке вводит натуральное 
число N – количество элементов в массиве. В последующих  строках 
записаны N целых чисел Ai. Последняя строка содержит число X. 
Попробуйте использовать метод count(), а также решите задачу с 
помощью своего алгоритма (без count). Замерьте время работы двух 
алгоритмов и сравните, подумайте, почему оно отличается.
*Пример:*

5
    1 2 3 4 5
    3
    -> 1
'''
import time
input_list = []
list_len = int(input("Введите количество элементов "))
for _ in range(list_len):
    input_list.append(int(input("Введите число: ")))
print(input_list)   

input_X = int(input("Введите число X: "))

count = 0
for i in range(list_len):
    if input_list[i] == input_X:
        count +=1

start = time.perf_counter()
print(f"Число {input_X} повторяется {count} раз")
end = time.perf_counter()
first_time = end - start


start = time.perf_counter()
print(input_list.count(input_X))
end = time.perf_counter()
second_time = end - start

print(first_time/second_time)

#Задача 18: Требуется найти в массиве A[1..N] самый близкий по 
#величине элемент к заданному числу X. Пользователь в первой 
#строке вводит натуральное число N – количество элементов в массиве.
# В последующих  строках записаны N целых чисел Ai. Последняя 
#строка содержит число X
#*Пример:*
'''
5
    1 2 3 4 5
    6
    -> 5
    '''
input_list = []
list_len = int(input("Введите количество элементов "))
for _ in range(list_len):
    input_list.append(int(input("Введите число: ")))
print(input_list)   

input_X = int(input("Введите число X: "))

min = abs(input_X -input_list[0])
min_index = 0 
for i in range(list_len):
    diff = abs(input_X - input_list[i])
    if diff < min:
        min = diff    
        min_index = i
   
print(input_list[min_index])

'''
Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет 
определенную ценность. В случае с английским алфавитом очки 
распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко;
 D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; 
 K – 5 очков; J, X – 8 очков; Q, Z – 10 очков. 
 А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко;
   Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка;
     Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков.
       Напишите программу, которая вычисляет стоимость введенного 
       пользователем слова. Будем считать, что на вход подается 
       только одно слово, которое содержит либо только английские, 
       либо только русские буквы.
*Пример:*

ноутбук
    12
    '''

english_dict =  {
    'A': 1, 'B': 3, 'C': 3, 'D': 2, 'E': 1, 'F': 4, 'G': 2, 'H': 4, 'I': 1,
    'J': 8, 'K': 5, 'L': 1, 'M': 3, 'N': 1, 'O': 1, 'P': 3, 'Q': 10, 'R': 1,
    'S': 1, 'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8, 'Y': 4, 'Z': 10
}
russian_dict = {
    'А': 1, 'Б': 3, 'В': 1, 'Г': 3, 'Д': 2, 'Е': 1, 'Ё': 3, 'Ж': 5, 'З': 5,
    'И': 1, 'Й': 4, 'К': 2, 'Л': 2, 'М': 2, 'Н': 1, 'О': 1, 'П': 2, 'Р': 1,
    'С': 1, 'Т': 1, 'У': 2, 'Ф': 10, 'Х': 5, 'Ц': 5, 'Ч': 5, 'Ш': 8, 'Щ': 10, 
    'Ъ': 10, 'Ы': 4, 'Ь': 3, 'Э': 8, 'Ю': 8, 'Я': 3
}
text = input('Введите слово: ').upper()
if text.isalpha():
    if text[0] in english_dict:
        scores = english_dict
    else:
        scores = russian_dict

    total_score = sum(scores.get(letter, 0) for letter in text)
    print("Стоимость слова", text, "равна", total_score)
else:
    print("Введено некорректное слово, должны быть только буквы.")